apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "traefik-forward-auth.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "traefik-forward-auth.name" . }}
    helm.sh/chart: {{ include "traefik-forward-auth.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "traefik-forward-auth.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "traefik-forward-auth.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
      - name: etc-traefik-forward-auth-secret
        secret:
          secretName: dex-k8s-authenticator-kubeaddons-dex-root-ca
          items:
          - key: dex-root-ca
            path: ca.crt
      - name: etc-traefik-forward-auth-config
        configMap:
          name: {{ .Release.Name }}-configmap
          items:
          - key: config
            path: config.ini
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: etc-traefik-forward-auth-secret
            mountPath: "/etc/traefik-forward-auth/secret"
            readOnly: true
          - name: etc-traefik-forward-auth-config
            mountPath: "/etc/traefik-forward-auth/config"
            readOnly: true
          env:
            - name: CONFIG
              value: "/etc/traefik-forward-auth/config/config.ini"
            - name: SSL_CERT_FILE
              value: "/etc/traefik-forward-auth/secret/ca.crt"
            - name: LOG_LEVEL
              value: "trace"
            {{- if .Values.traefikForwardAuth.oidcIssuer }}
            - name: PROVIDER_URI
              value: {{ .Values.traefikForwardAuth.oidcIssuer | quote }}
            {{- end }}
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "traefik-forward-auth.fullname" . }}
                  key: clientId
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "traefik-forward-auth.fullname" . }}
                  key: clientSecret
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "traefik-forward-auth.fullname" . }}
                  key: secret
            - name: WHITELIST
              valueFrom:
                secretKeyRef:
                  name: ops-portal-credentials
                  key: username
            - name: COOKIE_SECURE
              value: {{ .Values.traefikForwardAuth.cookieSecure | quote }}
            {{- if .Values.traefikForwardAuth.domain }}
            - name: DOMAIN
              value: {{ .Values.traefikForwardAuth.domain | quote }}
            {{- end }}
            {{- if .Values.traefikForwardAuth.authHost }}
            - name: AUTH_HOST
              value: {{ .Values.traefikForwardAuth.authHost | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: 4181
              protocol: TCP
          # livenessProbe:
          #   tcpSocket:
          #     port: http
          # readinessProbe:
          #   tcpSocket:
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
